import json
from typing import Any

from config import LlmConfig
from llm.base_llm_client import BaseLLMClient


class LlmClient(BaseLLMClient):
    """–ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∫–ª–∏–µ–Ω—Ç –¥–ª—è –æ–±—â–∏—Ö LLM-–≤—ã–∑–æ–≤–æ–≤.
    –ù–∞—Å–ª–µ–¥—É–µ—Ç—Å—è –æ—Ç BaseLLMClient –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –º–æ–¥–µ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ —è–∑—ã–∫–æ–≤—ã–º –º–æ–¥–µ–ª—è–º.
    Attributes:
        config (LlmConfig): –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è LLM –∫–ª–∏–µ–Ω—Ç–∞
        logger: –õ–æ–≥–≥–µ—Ä –¥–ª—è –∑–∞–ø–∏—Å–∏ —Å–æ–±—ã—Ç–∏–π
    """

    def __init__(self, config: LlmConfig | None = None) -> None:
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è LLM –∫–ª–∏–µ–Ω—Ç–∞.
        Args:
            config: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è LLM. –ï—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.
        """
        super().__init__(config=config)
        self.logger.debug("LlmClient –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω",
                          extra={"default_model": self.config.default_model})

    def ask_llm(self, prompt: str, 
                response_format: str = "json_object",
                temperature: float = 0.0
        ) -> Any:
        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ LLM.
        –í—ã–ø–æ–ª–Ω—è–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ —è–∑—ã–∫–æ–≤–æ–π –º–æ–¥–µ–ª–∏ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –∑–∞–¥–∞–Ω–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ.
        Args:
            prompt: –¢–µ–∫—Å—Ç –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ LLM
            response_format: –§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ ("json_object" –∏–ª–∏ "text")
            temperature: –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ (0.0 - –¥–µ—Ç–µ—Ä–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è)
        Returns:
            Any: –°–ª–æ–≤–∞—Ä—å –µ—Å–ª–∏ response_format == "json_object", –∏–Ω–∞—á–µ —Å—Ç—Ä–æ–∫–∞.
                 –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç {} –∏–ª–∏ "".
        """
        result, _raw = self._request_llm(
            prompt=prompt,
            model=self.config.default_model,
            response_format=response_format,
            temperature=temperature,
        )
        return result

    def parse_chunk_to_meaningful(self, chunk: dict[str, str]) -> dict[str, Any]:
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–∞—á–∫—É –∑–∞–ø–∏—Å–µ–π –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∏–º–µ–Ω –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.
        –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç chunk –¥–∞–Ω–Ω—ã—Ö –≤ JSON, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ LLM –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
        –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ–± –∏–º–µ–Ω–∞—Ö –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.
        Args:
            chunk: –°–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
        Returns:
            Dict[str, Any]: –°–ª–æ–≤–∞—Ä—å —Å –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –∏–ª–∏ –ø—É—Å—Ç–æ–π —Å–ª–æ–≤–∞—Ä—å –ø—Ä–∏ –æ—à–∏–±–∫–µ
        """
        try:
            chunk_json = json.dumps(chunk, ensure_ascii=False)
        except Exception as exc:
            self.logger.error("Chunk –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–µ—Ä–∏–∞–ª–∏–∑–æ–≤–∞–Ω –≤ JSON; "
                            "–≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.", exc_info=exc
                            )
            return {}

        prompt = f"""
–¢—ã ‚Äî –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä –∏ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ç–æ—Ä –±–∏–æ–≥—Ä–∞—Ñ–∏–π –ª—é–¥–µ–π.
–¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –∏–∑ –¥–∞–Ω–Ω—ã—Ö first_name / last_name / about / username
–≤—ã–¥–µ–ª–∏—Ç—å —Ç—Ä–∏ –∫–ª—é—á–µ–≤—ã—Ö –ø–æ–ª—è:
1. meaningful_first_name ‚Äî —Ä–µ–∞–ª—å–Ω–æ–µ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–µ –∏–º—è (–µ—Å–ª–∏ –Ω–µ—Ç, –ø–æ–ø—ã—Ç–∞–π—Å—è —É–≥–∞–¥–∞—Ç—å –ø–æ username)
2. meaningful_last_name ‚Äî —Ä–µ–∞–ª—å–Ω–∞—è —Ñ–∞–º–∏–ª–∏—è (–µ—Å–ª–∏ –Ω–µ–ª—å–∑—è –ø–æ–Ω—è—Ç—å ‚Äî –æ—Å—Ç–∞–≤—å –ø—É—Å—Ç–æ)
3. meaningful_about ‚Äî –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–æ–ª–∏ —á–µ–ª–æ–≤–µ–∫–∞ (–ø—Ä–æ—Ñ–µ—Å—Å–∏—è / –¥–æ–ª–∂–Ω–æ—Å—Ç—å / –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å)
---
–ü—Ä–∞–≤–∏–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏:
### üü¢ –ò–º–µ–Ω–∞ –∏ —Ñ–∞–º–∏–ª–∏–∏
- –ï—Å–ª–∏ –∏–º—è/—Ñ–∞–º–∏–ª–∏—è —É–∫–∞–∑–∞–Ω—ã ‚Äî –∏—Å–ø–æ–ª—å–∑—É–π –∏—Ö.
- –ú–æ–∂–µ—Ç –±—ã—Ç—å —Ç–∞–∫–æ–µ, —á—Ç–æ –≤ –æ–¥–Ω–æ–º –ø–æ–ª–µ –Ω–∞–ø–∏—Å–∞–Ω–æ –∏ –∏–º—è, –∏ —Ñ–∞–º–∏–ª–∏—è
- –ï—Å–ª–∏ –Ω–µ—Ç ‚Äî –ø–æ–ø—ã—Ç–∞–π—Å—è —É–≥–∞–¥–∞—Ç—å –∏–∑ username (–Ω–∞–ø—Ä–∏–º–µ—Ä: "sergman" ‚Üí "Sergey").
- –¢–æ–ª—å–∫–æ —Ä–µ–∞–ª—å–Ω—ã–µ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–µ –∏–º–µ–Ω–∞. –ù–µ –Ω–∞–¥–æ "Admin", "Support", "CryptoBro".

### üü° –û–ø–∏—Å–∞–Ω–∏–µ (meaningful_about)
- –°–Ω–∞—á–∞–ª–∞ –ø–æ–ø—Ä–æ–±—É–π –ø–æ–Ω—è—Ç—å **–≥–ª–∞–≤–Ω—É—é —Ä–∞–±–æ—Ç—É / –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å —á–µ–ª–æ–≤–µ–∫–∞**.
- –°–æ—Ö—Ä–∞–Ω–∏ —Å—Å—ã–ª–∫–∏, –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–º–ø–∞–Ω–∏–π (–∫ –ø—Ä–∏–º–µ—Ä—É, @DRONICO).
- –§–æ—Ä–º–∞—Ç: **"<—Ä–æ–ª—å> –≤ <–∫–æ–º–ø–∞–Ω–∏—è>"** –∏–ª–∏ **"<—Ä–æ–ª—å> / <—Å—Ñ–µ—Ä–∞>"**.
  - –ü—Ä–∏–º–µ—Ä: "Founder of CardPR.com" ‚Üí "–û—Å–Ω–æ–≤–∞—Ç–µ–ª—å CardPR.com"
  - –ü—Ä–∏–º–µ—Ä: "COO @amma.family" ‚Üí "–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –¥–∏—Ä–µ–∫—Ç–æ—Ä –≤ amma.family"

### üî¥ –ß—Ç–æ –ù–ï —Å—á–∏—Ç–∞–µ—Ç—Å—è meaningful_about –∏ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç–±—Ä–æ—à–µ–Ω–æ
- –ü—Ä–∏–∑—ã–≤—ã –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è, —Ü–∏—Ç–∞—Ç—ã, —Ñ–∏–ª–æ—Å–æ—Ñ–∏—è ("–∂–∏–≤—É –æ–¥–∏–Ω —Ä–∞–∑", "–≤—Å—ë –±—É–¥–µ—Ç —Ö–æ—Ä–æ—à–æ")
- "–õ—é–±–ª—é –ø—É—Ç–µ—à–µ—Å—Ç–≤–æ–≤–∞—Ç—å", "–º–∞—Ç—å –¥–≤–æ–∏—Ö –¥–µ—Ç–µ–π", "–±–ª–æ–≥–µ—Ä" –±–µ–∑ –∫–æ–Ω–∫—Ä–µ—Ç–∏–∫–∏
- –ü—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ –±–µ–∑ —Ä–æ–ª–∏ ("IT, –±–∏–∑–Ω–µ—Å, —Å–≤—è–∑—å")

–ï—Å–ª–∏ –Ω–µ–ª—å–∑—è –≤—ã–¥–µ–ª–∏—Ç—å —á—ë—Ç–∫—É—é –ø—Ä–æ—Ñ–µ—Å—Å–∏—é / —Ä–æ–ª—å ‚Äî meaningful_about –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—É—Å—Ç—ã–º.
---
–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê (—Å—Ç—Ä–æ–≥–æ JSON):

{{
    "0": {{
        "person_id": 8194,
        "meaningful_first_name": "–ò–≤–∞–Ω",
        "meaningful_last_name": "–ò–≤–∞–Ω–æ–≤",
        "meaningful_about": "–ò–Ω–∂–µ–Ω–µ—Ä-–ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç –≤ Google"
    }}
    "1": {{
        "person_id": "412412",
        "meaningful_first_name": "–ú–∞—Ä–∏—è",
        "meaningful_last_name": "–ú–∞–∫–∞—Ä–æ–≤–∞",
        "meaningful_about": ""
    }}
}}

---
–î–ê–ù–ù–´–ï –î–õ–Ø –û–ë–†–ê–ë–û–¢–ö–ò (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: {len(chunk)}):
{chunk_json}
"""

        self.logger.debug("–í—ã–∑–æ–≤ ask_llm –¥–ª—è parse_names_and_about_chunk",
                          extra={"chunk_size": len(chunk)}
                          )
        response = self.ask_llm(prompt, response_format="json_object")
        if not isinstance(response, dict):
            self.logger.warning("–û–∂–∏–¥–∞–ª—Å—è —Å–ª–æ–≤–∞—Ä—å, –Ω–æ –ø–æ–ª—É—á–µ–Ω –¥—Ä—É–≥–æ–π —Ç–∏–ø; –≤–æ–∑–≤—Ä–∞—â–∞–µ–º {}.")
            return {}
        return response

    # def postcheck(self, chunk: dict[str, str]) -> dict[str, bool]:
    def postcheck(self, text) -> bool:
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—Å—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç–µ–ª—å–Ω—ã–º –æ–ø–∏—Å–∞–Ω–∏–µ–º —á–µ–ª–æ–≤–µ–∫–∞ –∏–ª–∏ –∑–∞–≥–ª—É—à–∫–æ–π.
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏.
        """
        prompt = f"""
    –¢—ã ‚Äî AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –∫–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç –Ω–∞ –æ–¥–∏–Ω –∏–∑ –¥–≤—É—Ö —Ç–∏–ø–æ–≤.

    **–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:**
    - **True:** –û—Ç–≤–µ—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç —Ä–µ–∞–ª—å–Ω—É—é, –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º —á–µ–ª–æ–≤–µ–∫–µ (–¥–æ–ª–∂–Ω–æ—Å—Ç—å, –∫–æ–º–ø–∞–Ω–∏—è, –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è, —Ü–∏—Ñ—Ä—ã, —Ñ–∞–∫—Ç—ã).
    - **False:** –û—Ç–≤–µ—Ç —è–≤–ª—è–µ—Ç—Å—è –∑–∞–≥–ª—É—à–∫–æ–π –∏ —Å–æ–æ–±—â–∞–µ—Ç, —á—Ç–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–µ–ª–æ–≤–µ–∫–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.

    **–ü—Ä–∏–º–µ—Ä—ã:**

    –ü—Ä–∏–º–µ—Ä 1 (True):
    –¢–µ–∫—Å—Ç: "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ö–ª–∏—à–µ–≤ —è–≤–ª—è–µ—Ç—Å—è –≥–µ–Ω–µ—Ä–∞–ª—å–Ω—ã–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–æ–º digital-–∞–≥–µ–Ω—Ç—Å—Ç–≤–∞ Think Mobile, –∫–æ—Ç–æ—Ä–æ–µ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è ..."
    –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è: True

    –ü—Ä–∏–º–µ—Ä 2 (False):
    –¢–µ–∫—Å—Ç: "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–æ–π —Å–ø—Ä–∞–≤–∫–∏ –æ —á–µ–ª–æ–≤–µ–∫–µ ..."
    –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è: False

    ---
    –¢–µ–ø–µ—Ä—å –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–ª–µ–¥—É—é—â–∏–π —Ç–µ–∫—Å—Ç:

    –¢–µ–∫—Å—Ç: {text}

    ---
    –§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê (—Å—Ç—Ä–æ–≥–æ JSON):
    {{
        "is_valid": True/False
    }}
    """
        response, _raw = self._request_llm(
            prompt=prompt,
            model=self.config.check_model,
            response_format="json_object"
        )
        
        if not isinstance(response, dict) or "is_valid" not in response:
            self.logger.warning("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç –Ω–µ–π—Ä–æ—Å–µ—Ç–∏; –≤–æ–∑–≤—Ä–∞—â–∞–µ–º False –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.")
            return {"is_valid": False}
        
        return response.get("is_valid")
